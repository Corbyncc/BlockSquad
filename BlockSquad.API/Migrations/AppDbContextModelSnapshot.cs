// <auto-generated />
using BlockSquad.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlockSquad.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BlockSquad.API.Database.Entities.Appearance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("BeardId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FaceId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("HairColor")
                        .HasColumnType("longtext");

                    b.Property<byte>("HairId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("SkinColor")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Appearance");
                });

            modelBuilder.Entity("BlockSquad.API.Database.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codename")
                        .HasColumnType("longtext");

                    b.Property<long>("SteamId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BlockSquad.API.Database.Entities.Appearance", b =>
                {
                    b.HasOne("BlockSquad.API.Database.Entities.User", null)
                        .WithOne("Appearance")
                        .HasForeignKey("BlockSquad.API.Database.Entities.Appearance", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlockSquad.API.Database.Entities.User", b =>
                {
                    b.Navigation("Appearance");
                });
#pragma warning restore 612, 618
        }
    }
}
